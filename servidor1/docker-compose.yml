# =======================================================================
# Platform Name            demo-platform
# Platform Stack:          trivadis/platys-modern-data-platform
# Platform Stack Version:  1.16.0-preview
# =======================================================================
version: '3.5'
networks:
  default:
    name: demo-platform
# backward compatiblity to platform < 1.14.0
# Enable PostgreSQL or MySQL for MLflow server
services:
  #  ================================== Cassandra ========================================== #
  cassandra-1:
    image: cassandra:4.0
    container_name: cassandra-1
    hostname: cassandra-1
    labels:
      com.platys.name: cassandra
    ports:
      - 29042:9042
      - 7199:7199
      - 9160:9160
    environment:
      - CASSANDRA_CLUSTER_NAME="Test Cluster"
      - CASSANDRA_DC=se1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=128
      - LOCAL_JMX=no
    volumes:
      - ./data-transfer:/data-transfer
      - ./conf/cassandra/jmxremote.access:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management/jmxremote.access
      - ./conf/cassandra/jmxremote.password:/etc/cassandra/jmxremote.password
      - ./container-volume/cassandra/data/cassandra-1:/var/lib/cassandra
    restart: unless-stopped
  cassandra-2:
    image: cassandra:4.0
    container_name: cassandra-2
    hostname: cassandra-2
    labels:
      com.platys.name: cassandra
    ports:
      - 29043:9042
      - 7200:7199
      - 9161:9160
    environment:
      - CASSANDRA_CLUSTER_NAME="Test Cluster"
      - CASSANDRA_DC=se1
      - CASSANDRA_SEEDS=cassandra-1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=128
      - LOCAL_JMX=no
    volumes:
      - ./data-transfer:/data-transfer
      - ./conf/cassandra/jmxremote.access:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management/jmxremote.access
      - ./conf/cassandra/jmxremote.password:/etc/cassandra/jmxremote.password
      - ./container-volume/cassandra/data/cassandra-2:/var/lib/cassandra
    restart: unless-stopped
  cassandra-3:
    image: cassandra:4.0
    container_name: cassandra-3
    hostname: cassandra-3
    labels:
      com.platys.name: cassandra
    ports:
      - 29044:9042
      - 7201:7199
      - 9162:9160
    environment:
      - CASSANDRA_CLUSTER_NAME="Test Cluster"
      - CASSANDRA_DC=se1
      - CASSANDRA_SEEDS=cassandra-1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=128
      - LOCAL_JMX=no
    volumes:
      - ./data-transfer:/data-transfer
      - ./conf/cassandra/jmxremote.access:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management/jmxremote.access
      - ./conf/cassandra/jmxremote.password:/etc/cassandra/jmxremote.password
      - ./container-volume/cassandra/data/cassandra-3:/var/lib/cassandra
    restart: unless-stopped
  cassandra-web:
    image: trivadis/cassandra-web
    container_name: cassandra-web
    hostname: cassandra-web
    labels:
      com.platys.name: cassandra-web
      com.platys.webui.title: Cassandra Web UI
      com.platys.webui.url: http://${PUBLIC_IP}:28120
    ports:
      - 28120:3000
    environment:
      - CASSANDRA_HOSTNAME=cassandra-1
      - CASSANDRA_PORT=9042
      - CASSANDRA_USERNAME=cassandra
      - CASSANDRA_PASSWORD=cassandra
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  reaper:
    image: thelastpickle/cassandra-reaper:latest
    container_name: reaper
    hostname: reaper
    labels:
      com.platys.name: cassandra
      com.platys.webui.title: Reaper Application UI
      com.platys.webui.url: http://${PUBLIC_IP}:28232/webui
    ports:
      - 28232:8080
      - 28233:8081
    environment:
      - REAPER_STORAGE_TYPE=memory
      - REAPER_AUTO_SCHEDULING_ENABLED=true
      - REAPER_AUTO_SCHEDULING_INITIAL_DELAY_PERIOD="PT15S"
      - REAPER_AUTO_SCHEDULING_TIME_BEFORE_FIRST_SCHEDULE="PT1M"
      - REAPER_AUTO_SCHEDULING_PERIOD_BETWEEN_POLLS="PT1M"
      - REAPER_JMX_AUTH_USERNAME=reaper
      - REAPER_JMX_AUTH_PASSWORD=abc123!
      - CRYPTO_SYSTEM_PROPERTY_SECRET="CRYPTO_SECRET"
      - CRYPTO_SECRET="secret"
    volumes:
      - ./data-transfer:/data-transfer
  #  ================================== MongoDB ========================================== #
  mongo-1:
    image: mongo:5.0
    container_name: mongo-1
    hostname: mongo-1
    labels:
      com.platys.name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=sample
      - MONGO_INITDB_USERNAME=admin
      - MONGO_INITDB_PASSWORD=admin
    volumes:
      - ./data-transfer:/data-transfer
      # seeding scripts
      - ./conf/mongo-entrypoint:/docker-entrypoint-initdb.d
    restart: unless-stopped
  mongo-2:
    image: mongo:5.0
    container_name: mongo-2
    hostname: mongo-2
    labels:
      com.platys.name: mongodb
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_DATABASE=sample
      - MONGO_INITDB_USERNAME=admin
      - MONGO_INITDB_PASSWORD=admin
    volumes:
      - ./data-transfer:/data-transfer
      # seeding scripts
      - ./conf/mongo-entrypoint:/docker-entrypoint-initdb.d
    restart: unless-stopped
  mongo-3:
    image: mongo:5.0
    container_name: mongo-3
    hostname: mongo-3
    labels:
      com.platys.name: mongodb
    ports:
      - 27019:27017
    environment:
      - MONGO_INITDB_DATABASE=sample
      - MONGO_INITDB_USERNAME=admin
      - MONGO_INITDB_PASSWORD=admin
    volumes:
      - ./data-transfer:/data-transfer
      # seeding scripts
      - ./conf/mongo-entrypoint:/docker-entrypoint-initdb.d
    restart: unless-stopped
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    hostname: mongo-express
    labels:
      com.platys.name: mongo-express
      com.platys.webui.title: Mongo Express UI
      com.platys.webui.url: http://${PUBLIC_IP}:28123
    ports:
      - 28123:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-1
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  admin-mongo:
    image: adicom/admin-mongo:latest
    container_name: admin-mongo
    hostname: admin-mongo
    labels:
      com.platys.name: admin-mongo
      com.platys.webui.title: Admin Mongo UI
      com.platys.webui.url: http://${PUBLIC_IP}:28124
    ports:
      - 28124:1234
    volumes:
      - ./data-transfer:/data-transfer
    restart: unless-stopped

  #  ================================== markdown-viewer ========================================== #
  markdown-viewer:
    image: trivadis/markdown-web:latest
    container_name: markdown-viewer
    hostname: markdown-viewer
    labels:
      com.platys.name: markdown-viewer
      com.platys.webui.title: Markdown Viewer UI
      com.platys.webui.url: http://${PUBLIC_IP}:80
    ports:
      - 80:80
    volumes:
      - ./artefacts:/home/python/markdown
      - ./data-transfer:/data-transfer
    restart: unless-stopped
  markdown-renderer:
    image: trivadis/jinja2-renderer:latest
    container_name: markdown-renderer
    hostname: markdown-renderer
    labels:
      com.platys.name: markdown-renderer
    environment:
      USE_PUBLIC_IP: 'True'
      PUBLIC_IP: ${PUBLIC_IP}
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      DATAPLATFORM_HOME: ${DATAPLATFORM_HOME}
      PLATYS_PLATFORM_NAME: demo-platform
      PLATYS_PLATFORM_STACK: trivadis/platys-modern-data-platform
      PLATYS_PLATFORM_STACK_VERSION: 1.16.0-preview
      PLATYS_COPY_COOKBOOK_DATA: 'True'
    volumes:
      - ./artefacts/templates:/templates
      - ./artefacts/templates:/scripts
      - .:/variables
      - ./artefacts:/output
      - ./data-transfer:/data-transfer
volumes:
  data-transfer-vol:
    name: data_transfer_vol
